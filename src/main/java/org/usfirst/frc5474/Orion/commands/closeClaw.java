// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5474.Orion.commands;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc5474.Orion.Robot;
import org.usfirst.frc5474.Orion.subsystems.armSub;

import edu.wpi.first.wpilibj.Timer;

/**
 *
 */
public class closeClaw extends Command {


    private Timer timer;
    boolean finishRetract;
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public closeClaw() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.pClawSub);

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    @Override
    protected void initialize() {
        timer = new Timer();
        timer.start();
        finishRetract = false;
        Robot.pClawSub.returnPusher();
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
         if (timer.get() >= 2) {
            Robot.pClawSub.pistonExtend();
            //retractActivated = true;
            //SmartDashboard.putBoolean("Retract Activated", retractActivated);
            timer.reset();
            finishRetract = true;
        }
    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        return finishRetract;
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
        cancel();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
        end();
    }
}

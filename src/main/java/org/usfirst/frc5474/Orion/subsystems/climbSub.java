// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5474.Orion.subsystems;


import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.PIDSourceType;
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.command.Subsystem;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class climbSub extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private Spark winchMotor;
    private Encoder winchEncoder;
    private Spark barMotor;
    final int kPullDistance = 46;
    double currentDistance = 0;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public climbSub() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        winchMotor = new Spark(2);
        addChild("winchMotor",winchMotor);
        winchMotor.setInverted(false);
        
        winchEncoder = new Encoder(4, 5, false);
        addChild("winchEncoder",winchEncoder);
        winchEncoder.setDistancePerPulse(1.0);
        winchEncoder.setPIDSourceType(PIDSourceType.kDisplacement);
        //winchEncoder.setIndexSource(8, IndexingType.kResetOnRisingEdge);
        
        barMotor = new Spark(3);
        addChild("barMotor",barMotor);
        barMotor.setInverted(false);
        

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

    public void runBarMotor() {
        barMotor.set(.5);
        //will need timer in command
    }

    public void spinWinch(double winchPower) {
        currentDistance = winchEncoder.getDistance();
        if (currentDistance <= kPullDistance) {
            winchMotor.set(winchPower);
        }   else {
            winchMotor.stopMotor();
        }
    }

    public double GetandPutDistance(){
        double winchDistance = winchEncoder.getDistance();
        return winchDistance;
    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}


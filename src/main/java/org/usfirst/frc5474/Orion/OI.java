// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5474.Orion;

import org.usfirst.frc5474.Orion.commands.*;

import edu.wpi.first.wpilibj.Joystick;
//import edu.wpi.first.wpilibj.XboxController;
import edu.wpi.first.wpilibj.buttons.JoystickButton;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;


/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {
    //// CREATING BUTTONS
    // One type of button is a joystick button which is any button on a joystick.
    // You create one by telling it which joystick it's on and which button
    // number it is.
    // Joystick stick = new Joystick(port);
    // Button button = new JoystickButton(stick, buttonNumber);

    // There are a few additional built in buttons you can use. Additionally,
    // by subclassing Button you can create custom triggers and bind those to
    // commands the same as any other Button.

    //// TRIGGERING COMMANDS WITH BUTTONS
    // Once you have a button, it's trivial to bind it to a button in one of
    // three ways:

    // Start the command when the button is pressed and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenPressed(new ExampleCommand());

    // Run the command while the button is being held down and interrupt it once
    // the button is released.
    // button.whileHeld(new ExampleCommand());

    // Start the command when the button is released  and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenReleased(new ExampleCommand());


    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public JoystickButton winchOnlyButton;
    public JoystickButton barButton;
    public JoystickButton climbButton;
    public Joystick xBOXController;

    public JoystickButton armManual;
    public JoystickButton resetEncoderButton;
    public JoystickButton setPreGamePos;
    public JoystickButton moveManual;
    public JoystickButton gateOpen;
    public JoystickButton gateOpenHold;
    public JoystickButton pistonActuate;
    public JoystickButton moveSlider;
    public JoystickButton limelightbutton;
    public JoystickButton ledsOn;
    //public JoystickButton manualArmToggle;

    public Joystick proJoystick;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public OI() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

        xBOXController = new Joystick(0);

        limelightbutton = new JoystickButton(xBOXController, 1);
        limelightbutton.whileHeld(new limelight());

        gateOpen = new JoystickButton(xBOXController, 2);
        gateOpen.whenPressed(new gateOpen());

        //GateOpenHold added code ======
        gateOpenHold = new JoystickButton(xBOXController, 6);
        gateOpenHold.whileHeld(new gateOpenHold());

        pistonActuate = new JoystickButton(xBOXController, 3);
        pistonActuate.whenPressed(new PistonActuate());

        moveSlider = new JoystickButton(xBOXController, 4);
        moveSlider.whenPressed(new MoveSlider());
        // ===========

        //climbButton = new JoystickButton(xBOXController, 1);

        //barButton = new JoystickButton(xBOXController, 3);
        //winchOnlyButton = new JoystickButton(xBOXController, 1);
        //winchOnlyButton.whileHeld(new runWinch());

        // SmartDashboard Buttons

        //limelight button
        SmartDashboard.putData("limelight", new limelight());

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
    public Joystick getXBOXController() {
        return xBOXController;
    }


    public Joystick getProJoystick() {
        return proJoystick;
    }


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
}

